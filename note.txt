for more information, visit https://www.liaoxuefeng.com/wiki/896043488029600

1.使用git init来初始化Git仓库
2.添加文件到仓库，共分两步：
	1）git add <file ...> 可同时添加多个文件，中间由空格分割
	2）git commit -m <message> 提交，message部分注释更改内容

要随时掌握工作区状态，使用git status命令
如果git status显示有文件被修改过，可以使用git diff查看修改内容

HEAD指向当前版本，因此Git允许版本之间穿梭，使用命令git reset --hard <commit_id>
git log可以查看提交历史，以便确定回退到过去哪个版本
git reflog可以查看命令历史，以便确定回到未来哪个版本

暂存区和工作区：
	工作区是在本地可以看到的目录，比如当前的learngit
	暂存区临时保存本地的修改，当所有修改提交后，暂存区将会清空，如隐藏的.git

每次修改后只有add到缓存区之后commit才会被记录，否则修改将不会被提交
可以使用命令git diff HEAD -- <file> 来查看工作区与版本库里最新版本的区别

git checkout -- <file> 可以丢弃工作区的更改
git reset HEAD <file> 将添加到暂存区的文件进行丢弃，然后根据git checkout -- <file> 彻底丢弃修改

rm <file> 将本地的文件删除，之后git rm <file> 或git add <file> 将文件从版本库中删除
若是误删，可以用git checkout -- <file> 恢复
注意用git commit 提交修改

ssh-keygen -t rsa -C "youremail@example.com"可以生成一个RSA密钥对用于远程连接？？
将rsa.pub内容添加到Github，之后可以用于验证身份？？

git remote add origin git@github.com:USERNAME/PROJECKNAME 关联GitHub中的远程库
git push -u origin master把本地库的内容推送到远程，用git push命令，实际上是把当前分支master推送到远程。由于远程库是空的，我们第一次推送master分支时，加上了-u参数
Git不但会把本地的master分支内容推送的远程新的master分支，还会把本地的master分支和远程的master分支关联起来，在以后的推送或者拉取时就可以简化命令为git push origin master

用ssh-keygen命令新建密钥时，若采用了自定义的名称(github_rsa)，需要配置一个config文件：
	cd ~/.ssh/
	vi config
		Host github.com
		 HostName github.com
		 User git
		 IdentityFile ~/.ssh/github_ssa(密钥的路径)
	ssh -T git@github.com

git clone git@github.com:USERNAME/PROJECTNAME 克隆远程库到本地

git checkout -b dev 创建并切换到'dev'分支，等价于$git branch dev  +  $git checkout dev
git branch 查看当前分支
git merge dev 将'dev'分支的工作与当前的分支('master')合并
git branch -d dev 将'dev'分支删除
也可以用switch来代替checkout命令来进行分支切换，增删

不同分支相同文件出现冲突时无法合并，需要手动进行修改，git status会在源文件中标记出冲突位置
git log --graph --pretty=oneline --abbrev-commit可以看到分支合并情况
